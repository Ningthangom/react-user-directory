{"version":3,"sources":["logo.svg","components/Heading.js","utils/API.js","components/Users.js","App.js","reportWebVitals.js","index.js"],"names":["Heading","className","style","backgroundColor","alignItems","textAlign","marginBottom","users","axios","get","Users","state","searching","column","sort","handlesearching","e","setState","target","value","renderingUsers","searchingingUsers","sortusers","map","user","index","src","profile","alt","first","last","Date","dob","toDateString","email","cell","city","headers","changesort","up","down","API","then","res","usersArray","data","results","picture","medium","name","date","location","console","log","catch","error","this","toLowerCase","filter","includes","onChange","type","placeholder","aria-describedby","aria-label","width","display","color","scope","onClick","marginLeft","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAe,I,YCiBCA,EAfO,WACnB,OACI,sBAAKC,UAAU,YAAYC,MAAS,CAChCC,gBAAiB,QACjBC,WAAY,SACZC,UAAU,SACVC,aAAa,KAJjB,UAOI,gDACA,qH,iDCNG,OACbC,MALF,WACE,OAAOC,IAAMC,IAAI,mDCgMJC,E,4MA5LbC,MAAQ,CACNJ,MAAO,GACPK,UAAW,GACXC,OAAQ,GACRC,KAAM,I,EA4BRC,gBAAkB,SAAAC,GAChB,EAAKC,SAAS,CAAEL,UAAWI,EAAEE,OAAOC,S,EAkBtCC,eAAiB,WACf,OAAO,EAAKC,oBACTP,KAAK,EAAKQ,WACVC,KAAI,SAACC,EAAMC,GACV,OACE,+BACE,6BACE,qBAAKC,IAAKF,EAAKG,QAASC,IAAI,sBAE9B,6BAAKJ,EAAKK,QACV,6BAAKL,EAAKM,OACV,6BAAK,IAAIC,KAAKP,EAAKQ,KAAKC,iBACxB,6BAAKT,EAAKU,QACV,6BAAKV,EAAKW,OACV,6BAAKX,EAAKY,SATHX,O,EAgBjBY,QAAU,SAAAxB,GACR,OAAO,EAAKF,MAAME,SAAWA,EAAtB,sBACY,EAAKF,MAAMG,MADvB,e,EAMTwB,WAAa,SAAAzB,GACX,EAAKF,MAAME,SAAWA,GAA8B,SAApB,EAAKF,MAAMG,KACvC,EAAKG,SAAS,CAAEH,KAAM,OAAQD,OAAQA,IACtC,EAAKI,SAAS,CAAEH,KAAM,OAAQD,OAAQA,K,EAI5CS,UAAY,SAACiB,EAAIC,GACf,OAAID,EAAG,EAAK5B,MAAME,QAAU2B,EAAK,EAAK7B,MAAME,QACf,SAApB,EAAKF,MAAMG,MAAmB,EAAI,EAChCyB,EAAG,EAAK5B,MAAME,QAAU2B,EAAK,EAAK7B,MAAME,QACtB,SAApB,EAAKF,MAAMG,KAAkB,GAAK,EAEpC,G,uDAjFT,WAAqB,IAAD,OAClB2B,EAAIlC,QACDmC,MAAK,SAAAC,GACJ,IAAMC,EAAaD,EAAIE,KAAKC,QAAQvB,KAAI,SAAAC,GACtC,MAAO,CACLG,QAASH,EAAKuB,QAAQC,OACtBnB,MAAOL,EAAKyB,KAAKpB,MACjBC,KAAMN,EAAKyB,KAAKnB,KAChBI,MAAOV,EAAKU,MACZC,KAAKX,EAAKW,KACVH,IAAKR,EAAKQ,IAAIkB,KACdd,KAAMZ,EAAK2B,SAASf,SAIxB,EAAKnB,SAAS,CAAEV,MAAOqC,IACvBQ,QAAQC,IAAI,CAAE9C,MAAOqC,OAEtBU,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,Q,+BAUhC,WACE,IAAM3C,EAAY4C,KAAK7C,MAAMC,UAAU6C,cACvC,OAAOD,KAAK7C,MAAMJ,MAAMmD,QAAO,SAAAlC,GAC7B,OACEA,EAAKK,MAAM4B,cAAcE,SAAS/C,IAClCY,EAAKM,KAAK2B,cAAcE,SAAS/C,IACjCY,EAAKY,KAAKqB,cAAcE,SAAS/C,Q,oBAmDvC,WAAU,IAAD,OACP,OACE,qCACE,sBAAKX,UAAU,mCAAf,UACE,qBAAKA,UAAU,wBACf,uBACE2D,SAAUJ,KAAKzC,gBACf8C,KAAK,YACL5D,UAAU,mBACV6D,YAAY,eACZC,mBAAiB,eACjBC,aAAW,eAEX9D,MAAO,CACH+D,MAAM,OACNC,QAAQ,OACRC,MAAM,aAQd,qBAAKlE,UAAU,aAAf,SACE,wBAAOA,UAAU,sBAAjB,UACE,gCACE,+BACE,oBAAImE,MAAM,SAAV,6BACA,oBAAIA,MAAM,SAAV,SACE,sBACEnE,UAAWuD,KAAKnB,QAAQ,SACxBgC,QAAS,WACP,EAAK/B,WAAW,UAHpB,0BASF,oBAAI8B,MAAM,SAAV,SACE,sBACEnE,UAAWuD,KAAKnB,QAAQ,QACxBgC,QAAS,kBAAM,EAAK/B,WAAW,SAFjC,yBAOF,oBAAI8B,MAAM,SAAV,SACE,sBACEnE,UAAWuD,KAAKnB,QAAQ,OACxBgC,QAAS,kBAAM,EAAK/B,WAAW,QAFjC,mBAOF,oBAAI8B,MAAM,SAAV,SACE,sBACEnE,UAAWuD,KAAKnB,QAAQ,SACxBgC,QAAS,kBAAM,EAAK/B,WAAW,UAFjC,qBAOF,oBAAI8B,MAAM,SAAV,SACE,sBACEnE,UAAWuD,KAAKnB,QAAQ,QACxBgC,QAAS,kBAAM,EAAK/B,WAAW,SAFjC,4BAOF,oBAAI8B,MAAM,SAAV,SACE,sBACEnE,UAAWuD,KAAKnB,QAAQ,QACxBgC,QAAS,kBAAM,EAAK/B,WAAW,SAFjC,8BAUN,uBAAOpC,MAAO,CACVoE,WAAW,QADf,SAEId,KAAKpC,+B,GAtLDmD,IAAMC,WCUXC,MAVf,WAEE,OACC,qCACC,cAAC,EAAD,IACA,cAAC,EAAD,QCEWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f2ba4206.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nexport const Heading = () => {\r\n    return (\r\n        <div className=\"container\" style = {{\r\n            backgroundColor: \"green\",\r\n            alignItems: \"center\",\r\n            textAlign:\"center\",\r\n            marginBottom:\"0\"\r\n            \r\n        }}>\r\n            <h1>User-Directory</h1> \r\n            <p> use search bar to search employee by name/city or click on the headings to sort</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n export default Heading\r\n","import axios from \"axios\";\r\n\r\nfunction users() {\r\n  return axios.get(\"https://randomuser.me/api/?results=200&nat=US\");\r\n}\r\n\r\nexport default {\r\n  users\r\n};\r\n","import React from \"react\";\r\n// getting api from utils\r\nimport API from \"../utils/API\";\r\n\r\n// class component \r\nclass Users extends React.Component {\r\n  //initiazing the state\r\n  state = {\r\n    users: [],\r\n    searching: \"\",\r\n    column: \"\",\r\n    sort: \"\",\r\n   \r\n  };\r\n\r\n\r\n// get array of user objects\r\n// set return objects to state\r\n  componentDidMount() {\r\n    API.users()\r\n      .then(res => {\r\n        const usersArray = res.data.results.map(user => {\r\n          return {\r\n            profile: user.picture.medium,\r\n            first: user.name.first,\r\n            last: user.name.last,\r\n            email: user.email,\r\n            cell:user.cell,\r\n            dob: user.dob.date,\r\n            city: user.location.city,\r\n           \r\n          };\r\n        });\r\n        this.setState({ users: usersArray });\r\n        console.log({ users: usersArray })\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n  //function to update searching state each time the user types a character\r\n  handlesearching = e => {\r\n    this.setState({ searching: e.target.value });\r\n  };\r\n\r\n\r\n\r\n//   this funtion will filler list to based on first name, last name or city\r\n  searchingingUsers() {\r\n    const searching = this.state.searching.toLowerCase();\r\n    return this.state.users.filter(user => {\r\n      return (\r\n        user.first.toLowerCase().includes(searching) ||\r\n        user.last.toLowerCase().includes(searching) || \r\n        user.city.toLowerCase().includes(searching)\r\n      );\r\n    });\r\n  }\r\n\r\n  //function to render a table of users\r\n  renderingUsers = () => {\r\n    return this.searchingingUsers()\r\n      .sort(this.sortusers)\r\n      .map((user, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <td>\r\n              <img src={user.profile} alt=\"pic not avaible\"></img>\r\n            </td>\r\n            <td>{user.first}</td>\r\n            <td>{user.last}</td>\r\n            <td>{new Date(user.dob).toDateString()}</td>\r\n            <td>{user.email}</td>\r\n            <td>{user.cell}</td>\r\n            <td>{user.city}</td>\r\n          </tr>\r\n        );\r\n      });\r\n  };\r\n\r\n  //icon will show the sort direction\r\n  headers = column => {\r\n    return this.state.column === column\r\n      ? `clickHeader ${this.state.sort}`\r\n      : `clickHeader`;\r\n  };\r\n\r\n  // when a columnoum is click, this will set to the opposite direction \r\n  changesort = column => {\r\n    this.state.column === column && this.state.sort === \"AtoZ\"\r\n      ? this.setState({ sort: \"ZtoA\", column: column })\r\n      : this.setState({ sort: \"AtoZ\", column: column });\r\n  };\r\n\r\n  //setting value for sorting direction\r\n  sortusers = (up, down) => {\r\n    if (up[this.state.column] < down[this.state.column]) {\r\n      return this.state.sort === \"AtoZ\" ? -1 : 1;\r\n    } else if (up[this.state.column] > down[this.state.column]) {\r\n      return this.state.sort === \"AtoZ\" ? 1 : -1;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  //render searching box and the user container\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"input-group justify-content-end \" >\r\n          <div className=\"input-group-prepend\"></div>\r\n          <input\r\n            onChange={this.handlesearching}\r\n            type=\"searching\"\r\n            className=\"form-control m-4\"\r\n            placeholder=\"search users\"\r\n            aria-describedby=\"basic-addon2\"\r\n            aria-label=\"searchingBox\"\r\n\r\n            style={{\r\n                width:\"12px\",\r\n                display:\"flex\",\r\n                color:\"blue\"\r\n                // position:\"absolute\",\r\n                // right:\"20%\"\r\n                \r\n            }}\r\n     \r\n          />\r\n        </div>\r\n        <div className=\"table m-4 \" >\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"column\">Profile picture</th>\r\n                <th scope=\"column\">\r\n                  <span\r\n                    className={this.headers(\"first\")}\r\n                    onClick={() => {\r\n                      this.changesort(\"first\");\r\n                    }}\r\n                  >\r\n                    First Name\r\n                  </span>\r\n                </th>\r\n                <th scope=\"column\">\r\n                  <span\r\n                    className={this.headers(\"last\")}\r\n                    onClick={() => this.changesort(\"last\")}\r\n                  >\r\n                    Last Name\r\n                  </span>\r\n                </th>\r\n                <th scope=\"column\">\r\n                  <span\r\n                    className={this.headers(\"dob\")}\r\n                    onClick={() => this.changesort(\"dob\")}\r\n                  >\r\n                    DOB\r\n                  </span>\r\n                </th>\r\n                <th scope=\"column\">\r\n                  <span\r\n                    className={this.headers(\"email\")}\r\n                    onClick={() => this.changesort(\"email\")}\r\n                  >\r\n                    Email\r\n                  </span>\r\n                </th>\r\n                <th scope=\"column\">\r\n                  <span\r\n                    className={this.headers(\"cell\")}\r\n                    onClick={() => this.changesort(\"cell\")}\r\n                  >\r\n                Phone number\r\n                  </span>\r\n                </th>\r\n                <th scope=\"column\">\r\n                  <span\r\n                    className={this.headers(\"cell\")}\r\n                    onClick={() => this.changesort(\"cell\")}\r\n                  >\r\n               City Name\r\n                  </span>\r\n                </th>\r\n             \r\n              </tr>\r\n            </thead>\r\n            <tbody style={{\r\n                marginLeft:\"2rem\"\r\n            }}>{this.renderingUsers()}</tbody>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Heading from \"./components/Heading\"\nimport Users from \"./components/Users\"\n\nfunction App() {\n\n  return (\n   <>\n    <Heading/>\n    <Users/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}